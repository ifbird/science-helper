" compatible
set nocompatible

" set tab environment
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
autocmd FileType make setlocal noexpandtab " turn off expandtab for editing makefiles

filetype plugin indent on
syntax on

" set textwidth
set tw=0

" display the line number and ruler
set number
set ruler

" display the list characters
" set list
" set listchars=eol:$,tab:>-

" always show the tab line
set showtabline=2

" set the color scheme
" let g:solarized_termcolors=16
" colorscheme elflord
se t_Co=16
" set background=dark
" colorscheme solarized
colorscheme desert

" set the paste mode
" set paste

" set the autoindent
set autoindent

" set syntax on
" syntax on
" filetype indent plugin on

" Ensure correct highlighting for 
" Fortran free-form source code 
" and turn syntax highlighting on
let fortran_free_source=1
let fortran_do_enddo=1

" Make vim echo commands as they
" are being entered.
set showcmd

" Fix backspace key
set bs=2

" Set up searching so
" that it jumps to matches
" as the word is being
" entered and is case-insensitive
set incsearch
set ignorecase
set smartcase

" Uncomment the following lines to make vim automatically create a backup copy
" each time a file is edited. If you enable this feature, be sure to:
" $ mkdir ~/codeBackups
" or it won't work.
" set backupdir=~/codeBackups
" set backup

au BufNewFile,BufRead *.f,*.for,*.fpp,*.f95,*.f90,*.F90 set filetype=fortran

" make vim save and load the folding of the document each time it loads
" also places the cursor in the last place that it was left.
au BufWinLeave *.* mkview
au BufWinEnter *.* silent loadview

" Search visullay selected part by typing '//'
vnoremap // y/\V<C-r>=escape(@",'/\')<CR><CR>


" Using GUI color settings in a terminal
" Try to use CSApprox first, then guicolorscheme
"
" 1. Download and install CSApprox
" $ cd ~/.vim
" $ wget https://www.vim.org/scripts/download_script.php?src_id=18594 -O CSApprox.zip
" $ unzip CSApprox.zip
"
" 2. Add the script shown below
"
" Check plugins guicolorscheme and CSApprox
if version >= 700 && &term != 'cygwin' && !has('gui_running')
  " In the color terminal, try to use CSApprox.vim plugin or
  " guicolorscheme.vim plugin if possible in order to have consistent
  " colors on different terminals.
  "
  " Uncomment one of the following lines to force 256 or 88 colors if
  " your terminal supports it. Or comment both of them if your terminal
  " supports neither 256 nor 88 colors. Unfortunately, querying the
  " number of supported colors does not work on all terminals.
  set t_Co=256
  "set t_Co=88
  if &t_Co == 256 || &t_Co == 88
    " Check whether to use CSApprox.vim plugin or guicolorscheme.vim plugin.
    if has('gui') &&
      \ (filereadable(expand("$HOME/.vim/plugin/CSApprox.vim")) ||
      \  filereadable(expand("$HOME/vimfiles/plugin/CSApprox.vim")))
      let s:use_CSApprox = 1
    elseif filereadable(expand("$HOME/.vim/plugin/guicolorscheme.vim")) ||
      \    filereadable(expand("$HOME/vimfiles/plugin/guicolorscheme.vim"))
      let s:use_guicolorscheme = 1
    endif
  endif
endif
if exists('s:use_CSApprox')
  " Can use the CSApprox.vim plugin.
  let g:CSApprox_attr_map = { 'bold' : 'bold', 'italic' : '', 'sp' : '' }
  colorscheme rastafari
elseif exists('s:use_guicolorscheme')
  " Can use the guicolorscheme plugin. It needs to be loaded before
  " running GuiColorScheme (hence the :runtime! command).
  runtime! plugin/guicolorscheme.vim
  GuiColorScheme rastafari
else
  colorscheme rastafari
endif

" print a message when this file is loaded
echo "Loading ~/.vimrc done."
