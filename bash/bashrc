# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# Functions
load_modules () {
  # Check the hostname
  HOSTNAME=`hostname`
  echo "The host is $HOSTNAME."

  if [[ $HOSTNAME == *taito* ]]; then
    case $1 in
      1)
        # echo '--> module switch intel gcc'
        # module switch intel gcc # for taito
        module purge
        module load gcc/4.8.2
        module load intelmpi/4.1.3
        module load hdf5-par/1.8.12
        module load netcdf4/4.3.1
        module load mkl/11.1.1
        module load git/2.17.1
        module load cdo/1.6.4  # climate data operators
        module load ncl/6.3.0  # NCL, CISL's NCAR Command Language (NCL)
        ;;
      2)
        # Remove all the modules
        module purge

        # Compiler, mpi and math lib
        module load gcc/7.3.0
        module load intelmpi/18.0.2
        module load mkl/18.0.2

        # netcdf and hdf
        module load hdf5-par/1.8.20
        module load netcdf4/4.6.1

        # other
        module load git/2.17.1
        module load ncl/6.3.0
        module load cdo/1.9.5
        ;;
      3)
        # Remove all the modules
        module purge

        # Compiler, mpi and math lib
        module load gcc/6.2.0
        module load intelmpi/17.0.1 
        module load mkl/17.0.1

        # netcdf and hdf
        module load hdf5-par/1.8.20
        module load netcdf4/4.6.1

        # other
        module load git/2.17.1
        module load ncl/6.3.0
        module load cdo/1.9.5
        ;;
      4)
        # Remove all the modules
        module purge

        # Compiler, mpi and math lib
        module load gcc/4.9.3
        module load intelmpi/5.1.1
        module load mkl/11.3.0

        # netcdf and hdf
        module load hdf5-serial/1.8.15
        module load netcdf4-serial/4.3.3.1

        # other
        module load git/2.17.1
        module load ncl/6.3.0
        module load cdo/1.9.5
        ;;
      *)
        echo "Specify following nubmers to select module scheme: 1, 2."
        ;;
    esac
  fi
        
  if [[ $HOSTNAME == *puhti* ]]; then
    module purge
    module load intel/19.0.4
    module load hpcx-mpi/2.4.0
    module load intel-mkl/2019.0.4
    module load hdf/4.2.13
    module load hdf5/1.10.4
    module load netcdf/4.7.0
    module load netcdf-fortran/4.4.4
    module load grib-api/1.24.0
    module load cmake/3.12.3
  fi

}

# Uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
## force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
  color_prompt=yes
    else
  color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=always'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=always'
    alias fgrep='fgrep --color=always'
    alias egrep='egrep --color=always'
fi


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Set the environment for VAPOR.
# export VAPORBIN=~/local/vapor-2.1.0/bin
# . $VAPORBIN/vapor-setup.sh 2>/dev/null
# Make the prompt colorful$
# Prompt and prompt colors
# 30m - Black
# 31m - Red
# 32m - Green
# 33m - Yellow
# 34m - Blue
# 35m - Purple
# 36m - Cyan
# 37m - White
# 0 - Normal
# 1 - Bold
function prompt {
  local BLACK="\[\033[0;30m\]"
  local BLACKBOLD="\[\033[1;30m\]"
  local RED="\[\033[0;31m\]"
  local REDBOLD="\[\033[1;31m\]"
  local GREEN="\[\033[0;32m\]"
  local GREENBOLD="\[\033[1;32m\]"
  local YELLOW="\[\033[0;33m\]"
  local YELLOWBOLD="\[\033[1;33m\]"
  local BLUE="\[\033[0;34m\]"
  local BLUEBOLD="\[\033[1;34m\]"
  local PURPLE="\[\033[0;35m\]"
  local PURPLEBOLD="\[\033[1;35m\]"
  local CYAN="\[\033[0;36m\]"
  local CYANBOLD="\[\033[1;36m\]"
  local WHITE="\[\033[0;37m\]"
  local WHITEBOLD="\[\033[1;37m\]"
  # export PS1="\n$BLACKBOLD[\t]$GREENBOLD \u@\h\[\033[00m\]:$BLUEBOLD\w\[\033[00m\] \\$ "
  export PS1="\[\033]0;\w \007\]$GREENBOLD\u@\h\[\033[00m\]:$BLUEBOLD\W\[\033[00m\] \\$ "
}
prompt

# Add PATH
# PATH=$PATH:$HOME/bin
# LD_LIBRARY_PATH=$LIBRARY_PATH:$LD_LIBRARY_PATH

# Define some directory variables
# export DIR_ASAM=$USERAPPL/ASAM/asam_2_7
# export DIR_EXMP=$WRKDIR/ParExample/Canopy

# Load modules
load_modules

# Open the profiling for MPI applications (https://research.csc.fi/taito-profiling)
# export I_MPI_STATS=1

#+++++ TM5 +++++#
# export TM5_REPO="https://svn.knmi.nl/svn/TM5-MP"

# Add path for makedepf90
# export PATH=/homeappl/home/putian/appl_sisu/makedepf90/bin:$PATH

# Add python path for my own packages
[[ ":$PYTHONPATH:" != *":${HOME}/scripts/mypackages:"* ]] && \
  export PYTHONPATH="${HOME}/scripts/mypackages:${PYTHONPATH}"
[[ ":$PYTHONPATH:" != *":${HOME}/scripts/science-helper:"* ]] && \
  export PYTHONPATH="${HOME}/scripts/science-helper:${PYTHONPATH}"
# export PYTHONPATH=$PYTHONPATH:$HOME/scripts/mypackages
# export PATH=$HOME/.local/bin:$PATH

# Set hdf4 root path in Taito
# export H4ROOT=/appl/opt/hdf4/gcc-4.9.3/4.2.13

# Start an ssh-agent and add ssh private keys for github and bitbucket
# eval `ssh-agent`
# ssh-add ~/.ssh/id_sisu_github

# IDL
# export IDL_STARTUP=$HOME/opt/idl/idl_startup.pro

# Display the end message
echo "Loading ~/.bashrc done."
